import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the hourglassSum function below.
    static int hourglassSum(int[][] arr) {
        ArrayList<Integer> ar_res=new ArrayList<Integer>(16);
        for(int start=0; start<4; start++){
            for(int col=0; col<4; col++){
                int row=0, col_,sum=0;
                for(int i=start; i<start+3; i++){
                    row++;
                    col_=0;

                    for(int j=col; j<col+3; j++){
                        col_++;
                        if (row==2 && (col_==1 || col_==3) )
                        continue;
                        sum+=arr[i][j];
                    }
                    
                }
                ar_res.add(sum);
            }
        }
        int result=Collections.max(ar_res);
        System.out.println(ar_res);
        return result;
       
       
        
        


    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int[][] arr = new int[6][6];

        for (int i = 0; i < 6; i++) {
            String[] arrRowItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int j = 0; j < 6; j++) {
                int arrItem = Integer.parseInt(arrRowItems[j]);
                arr[i][j] = arrItem;
            }
        }

        int result = hourglassSum(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
